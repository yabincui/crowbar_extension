State 133 conflicts: 2 shift/reduce
State 144 conflicts: 2 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: definition_or_statement
    2                 | translation_unit definition_or_statement

    3 definition_or_statement: function_definition
    4                        | statement

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP block
    6                    | FUNCTION IDENTIFIER LP RP block

    7 parameter_list: IDENTIFIER
    8               | parameter_list COMMA IDENTIFIER

    9 argument_list: expression
   10              | argument_list COMMA expression

   11 statement_list: statement
   12               | statement_list statement

   13 expression: logical_or_expression
   14           | postfix_expression ASSIGN expression
   15           | postfix_expression ASSIGN array_literal

   16 logical_or_expression: logical_and_expression
   17                      | logical_or_expression LOGICAL_OR logical_and_expression

   18 logical_and_expression: equality_expression
   19                       | logical_and_expression LOGICAL_AND equality_expression

   20 equality_expression: relational_expression
   21                    | equality_expression EQ relational_expression
   22                    | equality_expression NE relational_expression

   23 relational_expression: additive_expression
   24                      | relational_expression GT additive_expression
   25                      | relational_expression GE additive_expression
   26                      | relational_expression LT additive_expression
   27                      | relational_expression LE additive_expression

   28 additive_expression: multiplicative_expression
   29                    | additive_expression ADD multiplicative_expression
   30                    | additive_expression SUB multiplicative_expression

   31 multiplicative_expression: unary_expression
   32                          | multiplicative_expression MUL unary_expression
   33                          | multiplicative_expression DIV unary_expression
   34                          | multiplicative_expression MOD unary_expression

   35 unary_expression: postfix_expression
   36                 | SUB unary_expression
   37                 | INCREMENT unary_expression
   38                 | DECREMENT unary_expression

   39 postfix_expression: primary_expression
   40                   | postfix_expression LB expression RB
   41                   | postfix_expression DOT IDENTIFIER LP argument_list RP
   42                   | postfix_expression DOT IDENTIFIER LP RP
   43                   | postfix_expression INCREMENT
   44                   | postfix_expression DECREMENT

   45 primary_expression: IDENTIFIER LP argument_list RP
   46                   | IDENTIFIER LP RP
   47                   | LP expression RP
   48                   | IDENTIFIER
   49                   | INT_LITERAL
   50                   | DOUBLE_LITERAL
   51                   | STRING_LITERAL
   52                   | TRUE_T
   53                   | FALSE_T
   54                   | NULL_T

   55 array_literal: LC expression_list RC
   56              | LC expression_list COMMA RC

   57 expression_list: /* empty */
   58                | expression
   59                | expression_list COMMA expression

   60 statement: SEMICOLON
   61          | expression SEMICOLON
   62          | global_statement
   63          | if_statement
   64          | while_statement
   65          | for_statement
   66          | return_statement
   67          | break_statement
   68          | continue_statement
   69          | block_statement

   70 global_statement: GLOBAL_T identifier_list SEMICOLON

   71 identifier_list: IDENTIFIER
   72                | identifier_list COMMA IDENTIFIER

   73 if_statement: IF LP expression RP statement
   74             | IF LP expression RP statement ELSE statement
   75             | IF LP expression RP statement elsif_list
   76             | IF LP expression RP statement elsif_list ELSE statement

   77 elsif_list: elsif
   78           | elsif_list elsif

   79 elsif: ELSIF LP expression RP statement

   80 while_statement: WHILE LP expression RP statement

   81 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP statement

   82 expression_opt: /* empty */
   83               | expression

   84 return_statement: RETURN_T expression_opt SEMICOLON

   85 break_statement: BREAK SEMICOLON

   86 continue_statement: CONTINUE SEMICOLON

   87 block_statement: block

   88 block: LC statement_list RC
   89      | LC RC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 49
DOUBLE_LITERAL (259) 50
STRING_LITERAL (260) 51
IDENTIFIER (261) 5 6 7 8 41 42 45 46 48 71 72
FUNCTION (262) 5 6
IF (263) 73 74 75 76
ELSE (264) 74 76
ELSIF (265) 79
WHILE (266) 80
FOR (267) 81
RETURN_T (268) 84
BREAK (269) 85
CONTINUE (270) 86
NULL_T (271) 54
LP (272) 5 6 41 42 45 46 47 73 74 75 76 79 80 81
RP (273) 5 6 41 42 45 46 47 73 74 75 76 79 80 81
LC (274) 55 56 88 89
RC (275) 55 56 88 89
SEMICOLON (276) 60 61 70 81 84 85 86
COMMA (277) 8 10 56 59 72
ASSIGN (278) 14 15
LOGICAL_AND (279) 19
LOGICAL_OR (280) 17
EQ (281) 21
NE (282) 22
GT (283) 24
GE (284) 25
LT (285) 26
LE (286) 27
ADD (287) 29
SUB (288) 30 36
MUL (289) 32
DIV (290) 33
MOD (291) 34
TRUE_T (292) 52
FALSE_T (293) 53
GLOBAL_T (294) 70
LB (295) 40
RB (296) 40
DOT (297) 41 42
INCREMENT (298) 37 43
DECREMENT (299) 38 44


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
translation_unit (46)
    on left: 1 2, on right: 0 2
definition_or_statement (47)
    on left: 3 4, on right: 1 2
function_definition (48)
    on left: 5 6, on right: 3
parameter_list (49)
    on left: 7 8, on right: 5 8
argument_list (50)
    on left: 9 10, on right: 10 41 45
statement_list (51)
    on left: 11 12, on right: 12 88
expression (52)
    on left: 13 14 15, on right: 9 10 14 40 47 58 59 61 73 74 75 76
    79 80 83
logical_or_expression (53)
    on left: 16 17, on right: 13 17
logical_and_expression (54)
    on left: 18 19, on right: 16 17 19
equality_expression (55)
    on left: 20 21 22, on right: 18 19 21 22
relational_expression (56)
    on left: 23 24 25 26 27, on right: 20 21 22 24 25 26 27
additive_expression (57)
    on left: 28 29 30, on right: 23 24 25 26 27 29 30
multiplicative_expression (58)
    on left: 31 32 33 34, on right: 28 29 30 32 33 34
unary_expression (59)
    on left: 35 36 37 38, on right: 31 32 33 34 36 37 38
postfix_expression (60)
    on left: 39 40 41 42 43 44, on right: 14 15 35 40 41 42 43 44
primary_expression (61)
    on left: 45 46 47 48 49 50 51 52 53 54, on right: 39
array_literal (62)
    on left: 55 56, on right: 15
expression_list (63)
    on left: 57 58 59, on right: 55 56 59
statement (64)
    on left: 60 61 62 63 64 65 66 67 68 69, on right: 4 11 12 73 74
    75 76 79 80 81
global_statement (65)
    on left: 70, on right: 62
identifier_list (66)
    on left: 71 72, on right: 70 72
if_statement (67)
    on left: 73 74 75 76, on right: 63
elsif_list (68)
    on left: 77 78, on right: 75 76 78
elsif (69)
    on left: 79, on right: 77 78
while_statement (70)
    on left: 80, on right: 64
for_statement (71)
    on left: 81, on right: 65
expression_opt (72)
    on left: 82 83, on right: 81 84
return_statement (73)
    on left: 84, on right: 66
break_statement (74)
    on left: 85, on right: 67
continue_statement (75)
    on left: 86, on right: 68
block_statement (76)
    on left: 87, on right: 69
block (77)
    on left: 88 89, on right: 5 6 87


state 0

    0 $accept: . translation_unit $end

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    translation_unit           go to state 22
    definition_or_statement    go to state 23
    function_definition        go to state 24
    expression                 go to state 25
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    statement                  go to state 35
    global_statement           go to state 36
    if_statement               go to state 37
    while_statement            go to state 38
    for_statement              go to state 39
    return_statement           go to state 40
    break_statement            go to state 41
    continue_statement         go to state 42
    block_statement            go to state 43
    block                      go to state 44


state 1

   49 primary_expression: INT_LITERAL .

    $default  reduce using rule 49 (primary_expression)


state 2

   50 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 50 (primary_expression)


state 3

   51 primary_expression: STRING_LITERAL .

    $default  reduce using rule 51 (primary_expression)


state 4

   45 primary_expression: IDENTIFIER . LP argument_list RP
   46                   | IDENTIFIER . LP RP
   48                   | IDENTIFIER .

    LP  shift, and go to state 45

    $default  reduce using rule 48 (primary_expression)


state 5

    5 function_definition: FUNCTION . IDENTIFIER LP parameter_list RP block
    6                    | FUNCTION . IDENTIFIER LP RP block

    IDENTIFIER  shift, and go to state 46


state 6

   73 if_statement: IF . LP expression RP statement
   74             | IF . LP expression RP statement ELSE statement
   75             | IF . LP expression RP statement elsif_list
   76             | IF . LP expression RP statement elsif_list ELSE statement

    LP  shift, and go to state 47


state 7

   80 while_statement: WHILE . LP expression RP statement

    LP  shift, and go to state 48


state 8

   81 for_statement: FOR . LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP statement

    LP  shift, and go to state 49


state 9

   84 return_statement: RETURN_T . expression_opt SEMICOLON

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    $default  reduce using rule 82 (expression_opt)

    expression                 go to state 50
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    expression_opt             go to state 51


state 10

   85 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 52


state 11

   86 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 53


state 12

   54 primary_expression: NULL_T .

    $default  reduce using rule 54 (primary_expression)


state 13

   47 primary_expression: LP . expression RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 54
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34


state 14

   88 block: LC . statement_list RC
   89      | LC . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    RC              shift, and go to state 55
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    statement_list             go to state 56
    expression                 go to state 25
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    statement                  go to state 57
    global_statement           go to state 36
    if_statement               go to state 37
    while_statement            go to state 38
    for_statement              go to state 39
    return_statement           go to state 40
    break_statement            go to state 41
    continue_statement         go to state 42
    block_statement            go to state 43
    block                      go to state 44


state 15

   60 statement: SEMICOLON .

    $default  reduce using rule 60 (statement)


state 16

   36 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    unary_expression    go to state 58
    postfix_expression  go to state 59
    primary_expression  go to state 34


state 17

   52 primary_expression: TRUE_T .

    $default  reduce using rule 52 (primary_expression)


state 18

   53 primary_expression: FALSE_T .

    $default  reduce using rule 53 (primary_expression)


state 19

   70 global_statement: GLOBAL_T . identifier_list SEMICOLON

    IDENTIFIER  shift, and go to state 60

    identifier_list  go to state 61


state 20

   37 unary_expression: INCREMENT . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    unary_expression    go to state 62
    postfix_expression  go to state 59
    primary_expression  go to state 34


state 21

   38 unary_expression: DECREMENT . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    unary_expression    go to state 63
    postfix_expression  go to state 59
    primary_expression  go to state 34


state 22

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 64
    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    definition_or_statement    go to state 65
    function_definition        go to state 24
    expression                 go to state 25
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    statement                  go to state 35
    global_statement           go to state 36
    if_statement               go to state 37
    while_statement            go to state 38
    for_statement              go to state 39
    return_statement           go to state 40
    break_statement            go to state 41
    continue_statement         go to state 42
    block_statement            go to state 43
    block                      go to state 44


state 23

    1 translation_unit: definition_or_statement .

    $default  reduce using rule 1 (translation_unit)


state 24

    3 definition_or_statement: function_definition .

    $default  reduce using rule 3 (definition_or_statement)


state 25

   61 statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 66


state 26

   13 expression: logical_or_expression .
   17 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 67

    $default  reduce using rule 13 (expression)


state 27

   16 logical_or_expression: logical_and_expression .
   19 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 68

    $default  reduce using rule 16 (logical_or_expression)


state 28

   18 logical_and_expression: equality_expression .
   21 equality_expression: equality_expression . EQ relational_expression
   22                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 69
    NE  shift, and go to state 70

    $default  reduce using rule 18 (logical_and_expression)


state 29

   20 equality_expression: relational_expression .
   24 relational_expression: relational_expression . GT additive_expression
   25                      | relational_expression . GE additive_expression
   26                      | relational_expression . LT additive_expression
   27                      | relational_expression . LE additive_expression

    GT  shift, and go to state 71
    GE  shift, and go to state 72
    LT  shift, and go to state 73
    LE  shift, and go to state 74

    $default  reduce using rule 20 (equality_expression)


state 30

   23 relational_expression: additive_expression .
   29 additive_expression: additive_expression . ADD multiplicative_expression
   30                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 23 (relational_expression)


state 31

   28 additive_expression: multiplicative_expression .
   32 multiplicative_expression: multiplicative_expression . MUL unary_expression
   33                          | multiplicative_expression . DIV unary_expression
   34                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 28 (additive_expression)


state 32

   31 multiplicative_expression: unary_expression .

    $default  reduce using rule 31 (multiplicative_expression)


state 33

   14 expression: postfix_expression . ASSIGN expression
   15           | postfix_expression . ASSIGN array_literal
   35 unary_expression: postfix_expression .
   40 postfix_expression: postfix_expression . LB expression RB
   41                   | postfix_expression . DOT IDENTIFIER LP argument_list RP
   42                   | postfix_expression . DOT IDENTIFIER LP RP
   43                   | postfix_expression . INCREMENT
   44                   | postfix_expression . DECREMENT

    ASSIGN     shift, and go to state 80
    LB         shift, and go to state 81
    DOT        shift, and go to state 82
    INCREMENT  shift, and go to state 83
    DECREMENT  shift, and go to state 84

    $default  reduce using rule 35 (unary_expression)


state 34

   39 postfix_expression: primary_expression .

    $default  reduce using rule 39 (postfix_expression)


state 35

    4 definition_or_statement: statement .

    $default  reduce using rule 4 (definition_or_statement)


state 36

   62 statement: global_statement .

    $default  reduce using rule 62 (statement)


state 37

   63 statement: if_statement .

    $default  reduce using rule 63 (statement)


state 38

   64 statement: while_statement .

    $default  reduce using rule 64 (statement)


state 39

   65 statement: for_statement .

    $default  reduce using rule 65 (statement)


state 40

   66 statement: return_statement .

    $default  reduce using rule 66 (statement)


state 41

   67 statement: break_statement .

    $default  reduce using rule 67 (statement)


state 42

   68 statement: continue_statement .

    $default  reduce using rule 68 (statement)


state 43

   69 statement: block_statement .

    $default  reduce using rule 69 (statement)


state 44

   87 block_statement: block .

    $default  reduce using rule 87 (block_statement)


state 45

   45 primary_expression: IDENTIFIER LP . argument_list RP
   46                   | IDENTIFIER LP . RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RP              shift, and go to state 85
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    argument_list              go to state 86
    expression                 go to state 87
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34


state 46

    5 function_definition: FUNCTION IDENTIFIER . LP parameter_list RP block
    6                    | FUNCTION IDENTIFIER . LP RP block

    LP  shift, and go to state 88


state 47

   73 if_statement: IF LP . expression RP statement
   74             | IF LP . expression RP statement ELSE statement
   75             | IF LP . expression RP statement elsif_list
   76             | IF LP . expression RP statement elsif_list ELSE statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 89
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34


state 48

   80 while_statement: WHILE LP . expression RP statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 90
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34


state 49

   81 for_statement: FOR LP . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    $default  reduce using rule 82 (expression_opt)

    expression                 go to state 50
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    expression_opt             go to state 91


state 50

   83 expression_opt: expression .

    $default  reduce using rule 83 (expression_opt)


state 51

   84 return_statement: RETURN_T expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 92


state 52

   85 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 85 (break_statement)


state 53

   86 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 86 (continue_statement)


state 54

   47 primary_expression: LP expression . RP

    RP  shift, and go to state 93


state 55

   89 block: LC RC .

    $default  reduce using rule 89 (block)


state 56

   12 statement_list: statement_list . statement
   88 block: LC statement_list . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    RC              shift, and go to state 94
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 25
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    statement                  go to state 95
    global_statement           go to state 36
    if_statement               go to state 37
    while_statement            go to state 38
    for_statement              go to state 39
    return_statement           go to state 40
    break_statement            go to state 41
    continue_statement         go to state 42
    block_statement            go to state 43
    block                      go to state 44


state 57

   11 statement_list: statement .

    $default  reduce using rule 11 (statement_list)


state 58

   36 unary_expression: SUB unary_expression .

    $default  reduce using rule 36 (unary_expression)


state 59

   35 unary_expression: postfix_expression .
   40 postfix_expression: postfix_expression . LB expression RB
   41                   | postfix_expression . DOT IDENTIFIER LP argument_list RP
   42                   | postfix_expression . DOT IDENTIFIER LP RP
   43                   | postfix_expression . INCREMENT
   44                   | postfix_expression . DECREMENT

    LB         shift, and go to state 81
    DOT        shift, and go to state 82
    INCREMENT  shift, and go to state 83
    DECREMENT  shift, and go to state 84

    $default  reduce using rule 35 (unary_expression)


state 60

   71 identifier_list: IDENTIFIER .

    $default  reduce using rule 71 (identifier_list)


state 61

   70 global_statement: GLOBAL_T identifier_list . SEMICOLON
   72 identifier_list: identifier_list . COMMA IDENTIFIER

    SEMICOLON  shift, and go to state 96
    COMMA      shift, and go to state 97


state 62

   37 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 37 (unary_expression)


state 63

   38 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 38 (unary_expression)


state 64

    0 $accept: translation_unit $end .

    $default  accept


state 65

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 66

   61 statement: expression SEMICOLON .

    $default  reduce using rule 61 (statement)


state 67

   17 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    logical_and_expression     go to state 98
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 59
    primary_expression         go to state 34


state 68

   19 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    equality_expression        go to state 99
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 59
    primary_expression         go to state 34


state 69

   21 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    relational_expression      go to state 100
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 59
    primary_expression         go to state 34


state 70

   22 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    relational_expression      go to state 101
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 59
    primary_expression         go to state 34


state 71

   24 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    additive_expression        go to state 102
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 59
    primary_expression         go to state 34


state 72

   25 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    additive_expression        go to state 103
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 59
    primary_expression         go to state 34


state 73

   26 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    additive_expression        go to state 104
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 59
    primary_expression         go to state 34


state 74

   27 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    additive_expression        go to state 105
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 59
    primary_expression         go to state 34


state 75

   29 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    multiplicative_expression  go to state 106
    unary_expression           go to state 32
    postfix_expression         go to state 59
    primary_expression         go to state 34


state 76

   30 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    multiplicative_expression  go to state 107
    unary_expression           go to state 32
    postfix_expression         go to state 59
    primary_expression         go to state 34


state 77

   32 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    unary_expression    go to state 108
    postfix_expression  go to state 59
    primary_expression  go to state 34


state 78

   33 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    unary_expression    go to state 109
    postfix_expression  go to state 59
    primary_expression  go to state 34


state 79

   34 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    unary_expression    go to state 110
    postfix_expression  go to state 59
    primary_expression  go to state 34


state 80

   14 expression: postfix_expression ASSIGN . expression
   15           | postfix_expression ASSIGN . array_literal

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 111
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 112
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    array_literal              go to state 113


state 81

   40 postfix_expression: postfix_expression LB . expression RB

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 114
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34


state 82

   41 postfix_expression: postfix_expression DOT . IDENTIFIER LP argument_list RP
   42                   | postfix_expression DOT . IDENTIFIER LP RP

    IDENTIFIER  shift, and go to state 115


state 83

   43 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 43 (postfix_expression)


state 84

   44 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 44 (postfix_expression)


state 85

   46 primary_expression: IDENTIFIER LP RP .

    $default  reduce using rule 46 (primary_expression)


state 86

   10 argument_list: argument_list . COMMA expression
   45 primary_expression: IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 116
    COMMA  shift, and go to state 117


state 87

    9 argument_list: expression .

    $default  reduce using rule 9 (argument_list)


state 88

    5 function_definition: FUNCTION IDENTIFIER LP . parameter_list RP block
    6                    | FUNCTION IDENTIFIER LP . RP block

    IDENTIFIER  shift, and go to state 118
    RP          shift, and go to state 119

    parameter_list  go to state 120


state 89

   73 if_statement: IF LP expression . RP statement
   74             | IF LP expression . RP statement ELSE statement
   75             | IF LP expression . RP statement elsif_list
   76             | IF LP expression . RP statement elsif_list ELSE statement

    RP  shift, and go to state 121


state 90

   80 while_statement: WHILE LP expression . RP statement

    RP  shift, and go to state 122


state 91

   81 for_statement: FOR LP expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt RP statement

    SEMICOLON  shift, and go to state 123


state 92

   84 return_statement: RETURN_T expression_opt SEMICOLON .

    $default  reduce using rule 84 (return_statement)


state 93

   47 primary_expression: LP expression RP .

    $default  reduce using rule 47 (primary_expression)


state 94

   88 block: LC statement_list RC .

    $default  reduce using rule 88 (block)


state 95

   12 statement_list: statement_list statement .

    $default  reduce using rule 12 (statement_list)


state 96

   70 global_statement: GLOBAL_T identifier_list SEMICOLON .

    $default  reduce using rule 70 (global_statement)


state 97

   72 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 124


state 98

   17 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   19 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 68

    $default  reduce using rule 17 (logical_or_expression)


state 99

   19 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   21 equality_expression: equality_expression . EQ relational_expression
   22                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 69
    NE  shift, and go to state 70

    $default  reduce using rule 19 (logical_and_expression)


state 100

   21 equality_expression: equality_expression EQ relational_expression .
   24 relational_expression: relational_expression . GT additive_expression
   25                      | relational_expression . GE additive_expression
   26                      | relational_expression . LT additive_expression
   27                      | relational_expression . LE additive_expression

    GT  shift, and go to state 71
    GE  shift, and go to state 72
    LT  shift, and go to state 73
    LE  shift, and go to state 74

    $default  reduce using rule 21 (equality_expression)


state 101

   22 equality_expression: equality_expression NE relational_expression .
   24 relational_expression: relational_expression . GT additive_expression
   25                      | relational_expression . GE additive_expression
   26                      | relational_expression . LT additive_expression
   27                      | relational_expression . LE additive_expression

    GT  shift, and go to state 71
    GE  shift, and go to state 72
    LT  shift, and go to state 73
    LE  shift, and go to state 74

    $default  reduce using rule 22 (equality_expression)


state 102

   24 relational_expression: relational_expression GT additive_expression .
   29 additive_expression: additive_expression . ADD multiplicative_expression
   30                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 24 (relational_expression)


state 103

   25 relational_expression: relational_expression GE additive_expression .
   29 additive_expression: additive_expression . ADD multiplicative_expression
   30                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 25 (relational_expression)


state 104

   26 relational_expression: relational_expression LT additive_expression .
   29 additive_expression: additive_expression . ADD multiplicative_expression
   30                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 26 (relational_expression)


state 105

   27 relational_expression: relational_expression LE additive_expression .
   29 additive_expression: additive_expression . ADD multiplicative_expression
   30                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 27 (relational_expression)


state 106

   29 additive_expression: additive_expression ADD multiplicative_expression .
   32 multiplicative_expression: multiplicative_expression . MUL unary_expression
   33                          | multiplicative_expression . DIV unary_expression
   34                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 29 (additive_expression)


state 107

   30 additive_expression: additive_expression SUB multiplicative_expression .
   32 multiplicative_expression: multiplicative_expression . MUL unary_expression
   33                          | multiplicative_expression . DIV unary_expression
   34                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 30 (additive_expression)


state 108

   32 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 32 (multiplicative_expression)


state 109

   33 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 33 (multiplicative_expression)


state 110

   34 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 34 (multiplicative_expression)


state 111

   55 array_literal: LC . expression_list RC
   56              | LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    $default  reduce using rule 57 (expression_list)

    expression                 go to state 125
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    expression_list            go to state 126


state 112

   14 expression: postfix_expression ASSIGN expression .

    $default  reduce using rule 14 (expression)


state 113

   15 expression: postfix_expression ASSIGN array_literal .

    $default  reduce using rule 15 (expression)


state 114

   40 postfix_expression: postfix_expression LB expression . RB

    RB  shift, and go to state 127


state 115

   41 postfix_expression: postfix_expression DOT IDENTIFIER . LP argument_list RP
   42                   | postfix_expression DOT IDENTIFIER . LP RP

    LP  shift, and go to state 128


state 116

   45 primary_expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 45 (primary_expression)


state 117

   10 argument_list: argument_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 129
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34


state 118

    7 parameter_list: IDENTIFIER .

    $default  reduce using rule 7 (parameter_list)


state 119

    6 function_definition: FUNCTION IDENTIFIER LP RP . block

    LC  shift, and go to state 14

    block  go to state 130


state 120

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list . RP block
    8 parameter_list: parameter_list . COMMA IDENTIFIER

    RP     shift, and go to state 131
    COMMA  shift, and go to state 132


state 121

   73 if_statement: IF LP expression RP . statement
   74             | IF LP expression RP . statement ELSE statement
   75             | IF LP expression RP . statement elsif_list
   76             | IF LP expression RP . statement elsif_list ELSE statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 25
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    statement                  go to state 133
    global_statement           go to state 36
    if_statement               go to state 37
    while_statement            go to state 38
    for_statement              go to state 39
    return_statement           go to state 40
    break_statement            go to state 41
    continue_statement         go to state 42
    block_statement            go to state 43
    block                      go to state 44


state 122

   80 while_statement: WHILE LP expression RP . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 25
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    statement                  go to state 134
    global_statement           go to state 36
    if_statement               go to state 37
    while_statement            go to state 38
    for_statement              go to state 39
    return_statement           go to state 40
    break_statement            go to state 41
    continue_statement         go to state 42
    block_statement            go to state 43
    block                      go to state 44


state 123

   81 for_statement: FOR LP expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt RP statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    $default  reduce using rule 82 (expression_opt)

    expression                 go to state 50
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    expression_opt             go to state 135


state 124

   72 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 72 (identifier_list)


state 125

   58 expression_list: expression .

    $default  reduce using rule 58 (expression_list)


state 126

   55 array_literal: LC expression_list . RC
   56              | LC expression_list . COMMA RC
   59 expression_list: expression_list . COMMA expression

    RC     shift, and go to state 136
    COMMA  shift, and go to state 137


state 127

   40 postfix_expression: postfix_expression LB expression RB .

    $default  reduce using rule 40 (postfix_expression)


state 128

   41 postfix_expression: postfix_expression DOT IDENTIFIER LP . argument_list RP
   42                   | postfix_expression DOT IDENTIFIER LP . RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RP              shift, and go to state 138
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    argument_list              go to state 139
    expression                 go to state 87
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34


state 129

   10 argument_list: argument_list COMMA expression .

    $default  reduce using rule 10 (argument_list)


state 130

    6 function_definition: FUNCTION IDENTIFIER LP RP block .

    $default  reduce using rule 6 (function_definition)


state 131

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 14

    block  go to state 140


state 132

    8 parameter_list: parameter_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 141


state 133

   73 if_statement: IF LP expression RP statement .
   74             | IF LP expression RP statement . ELSE statement
   75             | IF LP expression RP statement . elsif_list
   76             | IF LP expression RP statement . elsif_list ELSE statement

    ELSE   shift, and go to state 142
    ELSIF  shift, and go to state 143

    ELSE      [reduce using rule 73 (if_statement)]
    ELSIF     [reduce using rule 73 (if_statement)]
    $default  reduce using rule 73 (if_statement)

    elsif_list  go to state 144
    elsif       go to state 145


state 134

   80 while_statement: WHILE LP expression RP statement .

    $default  reduce using rule 80 (while_statement)


state 135

   81 for_statement: FOR LP expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt RP statement

    SEMICOLON  shift, and go to state 146


state 136

   55 array_literal: LC expression_list RC .

    $default  reduce using rule 55 (array_literal)


state 137

   56 array_literal: LC expression_list COMMA . RC
   59 expression_list: expression_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RC              shift, and go to state 147
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 148
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34


state 138

   42 postfix_expression: postfix_expression DOT IDENTIFIER LP RP .

    $default  reduce using rule 42 (postfix_expression)


state 139

   10 argument_list: argument_list . COMMA expression
   41 postfix_expression: postfix_expression DOT IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 149
    COMMA  shift, and go to state 117


state 140

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 5 (function_definition)


state 141

    8 parameter_list: parameter_list COMMA IDENTIFIER .

    $default  reduce using rule 8 (parameter_list)


state 142

   74 if_statement: IF LP expression RP statement ELSE . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 25
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    statement                  go to state 150
    global_statement           go to state 36
    if_statement               go to state 37
    while_statement            go to state 38
    for_statement              go to state 39
    return_statement           go to state 40
    break_statement            go to state 41
    continue_statement         go to state 42
    block_statement            go to state 43
    block                      go to state 44


state 143

   79 elsif: ELSIF . LP expression RP statement

    LP  shift, and go to state 151


state 144

   75 if_statement: IF LP expression RP statement elsif_list .
   76             | IF LP expression RP statement elsif_list . ELSE statement
   78 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 152
    ELSIF  shift, and go to state 143

    ELSE      [reduce using rule 75 (if_statement)]
    ELSIF     [reduce using rule 75 (if_statement)]
    $default  reduce using rule 75 (if_statement)

    elsif  go to state 153


state 145

   77 elsif_list: elsif .

    $default  reduce using rule 77 (elsif_list)


state 146

   81 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt RP statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    $default  reduce using rule 82 (expression_opt)

    expression                 go to state 50
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    expression_opt             go to state 154


state 147

   56 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 56 (array_literal)


state 148

   59 expression_list: expression_list COMMA expression .

    $default  reduce using rule 59 (expression_list)


state 149

   41 postfix_expression: postfix_expression DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 41 (postfix_expression)


state 150

   74 if_statement: IF LP expression RP statement ELSE statement .

    $default  reduce using rule 74 (if_statement)


state 151

   79 elsif: ELSIF LP . expression RP statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 155
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34


state 152

   76 if_statement: IF LP expression RP statement elsif_list ELSE . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 25
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    statement                  go to state 156
    global_statement           go to state 36
    if_statement               go to state 37
    while_statement            go to state 38
    for_statement              go to state 39
    return_statement           go to state 40
    break_statement            go to state 41
    continue_statement         go to state 42
    block_statement            go to state 43
    block                      go to state 44


state 153

   78 elsif_list: elsif_list elsif .

    $default  reduce using rule 78 (elsif_list)


state 154

   81 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . RP statement

    RP  shift, and go to state 157


state 155

   79 elsif: ELSIF LP expression . RP statement

    RP  shift, and go to state 158


state 156

   76 if_statement: IF LP expression RP statement elsif_list ELSE statement .

    $default  reduce using rule 76 (if_statement)


state 157

   81 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 25
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    statement                  go to state 159
    global_statement           go to state 36
    if_statement               go to state 37
    while_statement            go to state 38
    for_statement              go to state 39
    return_statement           go to state 40
    break_statement            go to state 41
    continue_statement         go to state 42
    block_statement            go to state 43
    block                      go to state 44


state 158

   79 elsif: ELSIF LP expression RP . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    INCREMENT       shift, and go to state 20
    DECREMENT       shift, and go to state 21

    expression                 go to state 25
    logical_or_expression      go to state 26
    logical_and_expression     go to state 27
    equality_expression        go to state 28
    relational_expression      go to state 29
    additive_expression        go to state 30
    multiplicative_expression  go to state 31
    unary_expression           go to state 32
    postfix_expression         go to state 33
    primary_expression         go to state 34
    statement                  go to state 160
    global_statement           go to state 36
    if_statement               go to state 37
    while_statement            go to state 38
    for_statement              go to state 39
    return_statement           go to state 40
    break_statement            go to state 41
    continue_statement         go to state 42
    block_statement            go to state 43
    block                      go to state 44


state 159

   81 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP statement .

    $default  reduce using rule 81 (for_statement)


state 160

   79 elsif: ELSIF LP expression RP statement .

    $default  reduce using rule 79 (elsif)
