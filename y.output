State 116 conflicts: 2 shift/reduce
State 123 conflicts: 2 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: definition_or_statement
    2                 | translation_unit definition_or_statement

    3 definition_or_statement: function_definition
    4                        | statement

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP block
    6                    | FUNCTION IDENTIFIER LP RP block

    7 parameter_list: IDENTIFIER
    8               | parameter_list COMMA IDENTIFIER

    9 argument_list: expression
   10              | argument_list COMMA expression

   11 statement_list: statement
   12               | statement_list statement

   13 expression: logical_or_expression
   14           | IDENTIFIER ASSIGN expression

   15 logical_or_expression: logical_and_expression
   16                      | logical_or_expression LOGICAL_OR logical_and_expression

   17 logical_and_expression: equality_expression
   18                       | logical_and_expression LOGICAL_AND equality_expression

   19 equality_expression: relational_expression
   20                    | equality_expression EQ relational_expression
   21                    | equality_expression NE relational_expression

   22 relational_expression: additive_expression
   23                      | relational_expression GT additive_expression
   24                      | relational_expression GE additive_expression
   25                      | relational_expression LT additive_expression
   26                      | relational_expression LE additive_expression

   27 additive_expression: multiplicative_expression
   28                    | additive_expression ADD multiplicative_expression
   29                    | additive_expression SUB multiplicative_expression

   30 multiplicative_expression: unary_expression
   31                          | multiplicative_expression MUL unary_expression
   32                          | multiplicative_expression DIV unary_expression
   33                          | multiplicative_expression MOD unary_expression

   34 unary_expression: primary_expression
   35                 | SUB unary_expression

   36 primary_expression: IDENTIFIER LP argument_list RP
   37                   | IDENTIFIER LP RP
   38                   | LP expression RP
   39                   | IDENTIFIER
   40                   | INT_LITERAL
   41                   | DOUBLE_LITERAL
   42                   | STRING_LITERAL
   43                   | TRUE_T
   44                   | FALSE_T
   45                   | NULL_T

   46 statement: SEMICOLON
   47          | expression SEMICOLON
   48          | global_statement
   49          | if_statement
   50          | while_statement
   51          | for_statement
   52          | return_statement
   53          | break_statement
   54          | continue_statement
   55          | block_statement

   56 global_statement: GLOBAL_T identifier_list SEMICOLON

   57 identifier_list: IDENTIFIER
   58                | identifier_list COMMA IDENTIFIER

   59 if_statement: IF LP expression RP statement
   60             | IF LP expression RP statement ELSE statement
   61             | IF LP expression RP statement elsif_list
   62             | IF LP expression RP statement elsif_list ELSE statement

   63 elsif_list: elsif
   64           | elsif_list elsif

   65 elsif: ELSIF LP expression RP statement

   66 while_statement: WHILE LP expression RP statement

   67 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP statement

   68 expression_opt: /* empty */
   69               | expression

   70 return_statement: RETURN_T expression_opt SEMICOLON

   71 break_statement: BREAK SEMICOLON

   72 continue_statement: CONTINUE SEMICOLON

   73 block_statement: block

   74 block: LC statement_list RC
   75      | LC RC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 40
DOUBLE_LITERAL (259) 41
STRING_LITERAL (260) 42
IDENTIFIER (261) 5 6 7 8 14 36 37 39 57 58
FUNCTION (262) 5 6
IF (263) 59 60 61 62
ELSE (264) 60 62
ELSIF (265) 65
WHILE (266) 66
FOR (267) 67
RETURN_T (268) 70
BREAK (269) 71
CONTINUE (270) 72
NULL_T (271) 45
LP (272) 5 6 36 37 38 59 60 61 62 65 66 67
RP (273) 5 6 36 37 38 59 60 61 62 65 66 67
LC (274) 74 75
RC (275) 74 75
SEMICOLON (276) 46 47 56 67 70 71 72
COMMA (277) 8 10 58
ASSIGN (278) 14
LOGICAL_AND (279) 18
LOGICAL_OR (280) 16
EQ (281) 20
NE (282) 21
GT (283) 23
GE (284) 24
LT (285) 25
LE (286) 26
ADD (287) 28
SUB (288) 29 35
MUL (289) 31
DIV (290) 32
MOD (291) 33
TRUE_T (292) 43
FALSE_T (293) 44
GLOBAL_T (294) 56


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
translation_unit (41)
    on left: 1 2, on right: 0 2
definition_or_statement (42)
    on left: 3 4, on right: 1 2
function_definition (43)
    on left: 5 6, on right: 3
parameter_list (44)
    on left: 7 8, on right: 5 8
argument_list (45)
    on left: 9 10, on right: 10 36
statement_list (46)
    on left: 11 12, on right: 12 74
expression (47)
    on left: 13 14, on right: 9 10 14 38 47 59 60 61 62 65 66 69
logical_or_expression (48)
    on left: 15 16, on right: 13 16
logical_and_expression (49)
    on left: 17 18, on right: 15 16 18
equality_expression (50)
    on left: 19 20 21, on right: 17 18 20 21
relational_expression (51)
    on left: 22 23 24 25 26, on right: 19 20 21 23 24 25 26
additive_expression (52)
    on left: 27 28 29, on right: 22 23 24 25 26 28 29
multiplicative_expression (53)
    on left: 30 31 32 33, on right: 27 28 29 31 32 33
unary_expression (54)
    on left: 34 35, on right: 30 31 32 33 35
primary_expression (55)
    on left: 36 37 38 39 40 41 42 43 44 45, on right: 34
statement (56)
    on left: 46 47 48 49 50 51 52 53 54 55, on right: 4 11 12 59 60
    61 62 65 66 67
global_statement (57)
    on left: 56, on right: 48
identifier_list (58)
    on left: 57 58, on right: 56 58
if_statement (59)
    on left: 59 60 61 62, on right: 49
elsif_list (60)
    on left: 63 64, on right: 61 62 64
elsif (61)
    on left: 65, on right: 63 64
while_statement (62)
    on left: 66, on right: 50
for_statement (63)
    on left: 67, on right: 51
expression_opt (64)
    on left: 68 69, on right: 67 70
return_statement (65)
    on left: 70, on right: 52
break_statement (66)
    on left: 71, on right: 53
continue_statement (67)
    on left: 72, on right: 54
block_statement (68)
    on left: 73, on right: 55
block (69)
    on left: 74 75, on right: 5 6 73


state 0

    0 $accept: . translation_unit $end

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19

    translation_unit           go to state 20
    definition_or_statement    go to state 21
    function_definition        go to state 22
    expression                 go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    statement                  go to state 32
    global_statement           go to state 33
    if_statement               go to state 34
    while_statement            go to state 35
    for_statement              go to state 36
    return_statement           go to state 37
    break_statement            go to state 38
    continue_statement         go to state 39
    block_statement            go to state 40
    block                      go to state 41


state 1

   40 primary_expression: INT_LITERAL .

    $default  reduce using rule 40 (primary_expression)


state 2

   41 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 41 (primary_expression)


state 3

   42 primary_expression: STRING_LITERAL .

    $default  reduce using rule 42 (primary_expression)


state 4

   14 expression: IDENTIFIER . ASSIGN expression
   36 primary_expression: IDENTIFIER . LP argument_list RP
   37                   | IDENTIFIER . LP RP
   39                   | IDENTIFIER .

    LP      shift, and go to state 42
    ASSIGN  shift, and go to state 43

    $default  reduce using rule 39 (primary_expression)


state 5

    5 function_definition: FUNCTION . IDENTIFIER LP parameter_list RP block
    6                    | FUNCTION . IDENTIFIER LP RP block

    IDENTIFIER  shift, and go to state 44


state 6

   59 if_statement: IF . LP expression RP statement
   60             | IF . LP expression RP statement ELSE statement
   61             | IF . LP expression RP statement elsif_list
   62             | IF . LP expression RP statement elsif_list ELSE statement

    LP  shift, and go to state 45


state 7

   66 while_statement: WHILE . LP expression RP statement

    LP  shift, and go to state 46


state 8

   67 for_statement: FOR . LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP statement

    LP  shift, and go to state 47


state 9

   70 return_statement: RETURN_T . expression_opt SEMICOLON

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    $default  reduce using rule 68 (expression_opt)

    expression                 go to state 48
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    expression_opt             go to state 49


state 10

   71 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


state 11

   72 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


state 12

   45 primary_expression: NULL_T .

    $default  reduce using rule 45 (primary_expression)


state 13

   38 primary_expression: LP . expression RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    expression                 go to state 52
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 14

   74 block: LC . statement_list RC
   75      | LC . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    RC              shift, and go to state 53
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19

    statement_list             go to state 54
    expression                 go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    statement                  go to state 55
    global_statement           go to state 33
    if_statement               go to state 34
    while_statement            go to state 35
    for_statement              go to state 36
    return_statement           go to state 37
    break_statement            go to state 38
    continue_statement         go to state 39
    block_statement            go to state 40
    block                      go to state 41


state 15

   46 statement: SEMICOLON .

    $default  reduce using rule 46 (statement)


state 16

   35 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    go to state 57
    primary_expression  go to state 31


state 17

   43 primary_expression: TRUE_T .

    $default  reduce using rule 43 (primary_expression)


state 18

   44 primary_expression: FALSE_T .

    $default  reduce using rule 44 (primary_expression)


state 19

   56 global_statement: GLOBAL_T . identifier_list SEMICOLON

    IDENTIFIER  shift, and go to state 58

    identifier_list  go to state 59


state 20

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 60
    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19

    definition_or_statement    go to state 61
    function_definition        go to state 22
    expression                 go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    statement                  go to state 32
    global_statement           go to state 33
    if_statement               go to state 34
    while_statement            go to state 35
    for_statement              go to state 36
    return_statement           go to state 37
    break_statement            go to state 38
    continue_statement         go to state 39
    block_statement            go to state 40
    block                      go to state 41


state 21

    1 translation_unit: definition_or_statement .

    $default  reduce using rule 1 (translation_unit)


state 22

    3 definition_or_statement: function_definition .

    $default  reduce using rule 3 (definition_or_statement)


state 23

   47 statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 62


state 24

   13 expression: logical_or_expression .
   16 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 63

    $default  reduce using rule 13 (expression)


state 25

   15 logical_or_expression: logical_and_expression .
   18 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 64

    $default  reduce using rule 15 (logical_or_expression)


state 26

   17 logical_and_expression: equality_expression .
   20 equality_expression: equality_expression . EQ relational_expression
   21                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 65
    NE  shift, and go to state 66

    $default  reduce using rule 17 (logical_and_expression)


state 27

   19 equality_expression: relational_expression .
   23 relational_expression: relational_expression . GT additive_expression
   24                      | relational_expression . GE additive_expression
   25                      | relational_expression . LT additive_expression
   26                      | relational_expression . LE additive_expression

    GT  shift, and go to state 67
    GE  shift, and go to state 68
    LT  shift, and go to state 69
    LE  shift, and go to state 70

    $default  reduce using rule 19 (equality_expression)


state 28

   22 relational_expression: additive_expression .
   28 additive_expression: additive_expression . ADD multiplicative_expression
   29                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 22 (relational_expression)


state 29

   27 additive_expression: multiplicative_expression .
   31 multiplicative_expression: multiplicative_expression . MUL unary_expression
   32                          | multiplicative_expression . DIV unary_expression
   33                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74
    MOD  shift, and go to state 75

    $default  reduce using rule 27 (additive_expression)


state 30

   30 multiplicative_expression: unary_expression .

    $default  reduce using rule 30 (multiplicative_expression)


state 31

   34 unary_expression: primary_expression .

    $default  reduce using rule 34 (unary_expression)


state 32

    4 definition_or_statement: statement .

    $default  reduce using rule 4 (definition_or_statement)


state 33

   48 statement: global_statement .

    $default  reduce using rule 48 (statement)


state 34

   49 statement: if_statement .

    $default  reduce using rule 49 (statement)


state 35

   50 statement: while_statement .

    $default  reduce using rule 50 (statement)


state 36

   51 statement: for_statement .

    $default  reduce using rule 51 (statement)


state 37

   52 statement: return_statement .

    $default  reduce using rule 52 (statement)


state 38

   53 statement: break_statement .

    $default  reduce using rule 53 (statement)


state 39

   54 statement: continue_statement .

    $default  reduce using rule 54 (statement)


state 40

   55 statement: block_statement .

    $default  reduce using rule 55 (statement)


state 41

   73 block_statement: block .

    $default  reduce using rule 73 (block_statement)


state 42

   36 primary_expression: IDENTIFIER LP . argument_list RP
   37                   | IDENTIFIER LP . RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    RP              shift, and go to state 76
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    argument_list              go to state 77
    expression                 go to state 78
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 43

   14 expression: IDENTIFIER ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    expression                 go to state 79
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 44

    5 function_definition: FUNCTION IDENTIFIER . LP parameter_list RP block
    6                    | FUNCTION IDENTIFIER . LP RP block

    LP  shift, and go to state 80


state 45

   59 if_statement: IF LP . expression RP statement
   60             | IF LP . expression RP statement ELSE statement
   61             | IF LP . expression RP statement elsif_list
   62             | IF LP . expression RP statement elsif_list ELSE statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    expression                 go to state 81
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 46

   66 while_statement: WHILE LP . expression RP statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    expression                 go to state 82
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 47

   67 for_statement: FOR LP . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    $default  reduce using rule 68 (expression_opt)

    expression                 go to state 48
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    expression_opt             go to state 83


state 48

   69 expression_opt: expression .

    $default  reduce using rule 69 (expression_opt)


state 49

   70 return_statement: RETURN_T expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 84


state 50

   71 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 71 (break_statement)


state 51

   72 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 72 (continue_statement)


state 52

   38 primary_expression: LP expression . RP

    RP  shift, and go to state 85


state 53

   75 block: LC RC .

    $default  reduce using rule 75 (block)


state 54

   12 statement_list: statement_list . statement
   74 block: LC statement_list . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    RC              shift, and go to state 86
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19

    expression                 go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    statement                  go to state 87
    global_statement           go to state 33
    if_statement               go to state 34
    while_statement            go to state 35
    for_statement              go to state 36
    return_statement           go to state 37
    break_statement            go to state 38
    continue_statement         go to state 39
    block_statement            go to state 40
    block                      go to state 41


state 55

   11 statement_list: statement .

    $default  reduce using rule 11 (statement_list)


state 56

   36 primary_expression: IDENTIFIER . LP argument_list RP
   37                   | IDENTIFIER . LP RP
   39                   | IDENTIFIER .

    LP  shift, and go to state 42

    $default  reduce using rule 39 (primary_expression)


state 57

   35 unary_expression: SUB unary_expression .

    $default  reduce using rule 35 (unary_expression)


state 58

   57 identifier_list: IDENTIFIER .

    $default  reduce using rule 57 (identifier_list)


state 59

   56 global_statement: GLOBAL_T identifier_list . SEMICOLON
   58 identifier_list: identifier_list . COMMA IDENTIFIER

    SEMICOLON  shift, and go to state 88
    COMMA      shift, and go to state 89


state 60

    0 $accept: translation_unit $end .

    $default  accept


state 61

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 62

   47 statement: expression SEMICOLON .

    $default  reduce using rule 47 (statement)


state 63

   16 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    logical_and_expression     go to state 90
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 64

   18 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    equality_expression        go to state 91
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 65

   20 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    relational_expression      go to state 92
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 66

   21 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    relational_expression      go to state 93
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 67

   23 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        go to state 94
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 68

   24 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        go to state 95
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 69

   25 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        go to state 96
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 70

   26 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    additive_expression        go to state 97
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 71

   28 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    multiplicative_expression  go to state 98
    unary_expression           go to state 30
    primary_expression         go to state 31


state 72

   29 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    multiplicative_expression  go to state 99
    unary_expression           go to state 30
    primary_expression         go to state 31


state 73

   31 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    go to state 100
    primary_expression  go to state 31


state 74

   32 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    go to state 101
    primary_expression  go to state 31


state 75

   33 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 56
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    unary_expression    go to state 102
    primary_expression  go to state 31


state 76

   37 primary_expression: IDENTIFIER LP RP .

    $default  reduce using rule 37 (primary_expression)


state 77

   10 argument_list: argument_list . COMMA expression
   36 primary_expression: IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 103
    COMMA  shift, and go to state 104


state 78

    9 argument_list: expression .

    $default  reduce using rule 9 (argument_list)


state 79

   14 expression: IDENTIFIER ASSIGN expression .

    $default  reduce using rule 14 (expression)


state 80

    5 function_definition: FUNCTION IDENTIFIER LP . parameter_list RP block
    6                    | FUNCTION IDENTIFIER LP . RP block

    IDENTIFIER  shift, and go to state 105
    RP          shift, and go to state 106

    parameter_list  go to state 107


state 81

   59 if_statement: IF LP expression . RP statement
   60             | IF LP expression . RP statement ELSE statement
   61             | IF LP expression . RP statement elsif_list
   62             | IF LP expression . RP statement elsif_list ELSE statement

    RP  shift, and go to state 108


state 82

   66 while_statement: WHILE LP expression . RP statement

    RP  shift, and go to state 109


state 83

   67 for_statement: FOR LP expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt RP statement

    SEMICOLON  shift, and go to state 110


state 84

   70 return_statement: RETURN_T expression_opt SEMICOLON .

    $default  reduce using rule 70 (return_statement)


state 85

   38 primary_expression: LP expression RP .

    $default  reduce using rule 38 (primary_expression)


state 86

   74 block: LC statement_list RC .

    $default  reduce using rule 74 (block)


state 87

   12 statement_list: statement_list statement .

    $default  reduce using rule 12 (statement_list)


state 88

   56 global_statement: GLOBAL_T identifier_list SEMICOLON .

    $default  reduce using rule 56 (global_statement)


state 89

   58 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 111


state 90

   16 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   18 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 64

    $default  reduce using rule 16 (logical_or_expression)


state 91

   18 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   20 equality_expression: equality_expression . EQ relational_expression
   21                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 65
    NE  shift, and go to state 66

    $default  reduce using rule 18 (logical_and_expression)


state 92

   20 equality_expression: equality_expression EQ relational_expression .
   23 relational_expression: relational_expression . GT additive_expression
   24                      | relational_expression . GE additive_expression
   25                      | relational_expression . LT additive_expression
   26                      | relational_expression . LE additive_expression

    GT  shift, and go to state 67
    GE  shift, and go to state 68
    LT  shift, and go to state 69
    LE  shift, and go to state 70

    $default  reduce using rule 20 (equality_expression)


state 93

   21 equality_expression: equality_expression NE relational_expression .
   23 relational_expression: relational_expression . GT additive_expression
   24                      | relational_expression . GE additive_expression
   25                      | relational_expression . LT additive_expression
   26                      | relational_expression . LE additive_expression

    GT  shift, and go to state 67
    GE  shift, and go to state 68
    LT  shift, and go to state 69
    LE  shift, and go to state 70

    $default  reduce using rule 21 (equality_expression)


state 94

   23 relational_expression: relational_expression GT additive_expression .
   28 additive_expression: additive_expression . ADD multiplicative_expression
   29                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 23 (relational_expression)


state 95

   24 relational_expression: relational_expression GE additive_expression .
   28 additive_expression: additive_expression . ADD multiplicative_expression
   29                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 24 (relational_expression)


state 96

   25 relational_expression: relational_expression LT additive_expression .
   28 additive_expression: additive_expression . ADD multiplicative_expression
   29                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 25 (relational_expression)


state 97

   26 relational_expression: relational_expression LE additive_expression .
   28 additive_expression: additive_expression . ADD multiplicative_expression
   29                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 26 (relational_expression)


state 98

   28 additive_expression: additive_expression ADD multiplicative_expression .
   31 multiplicative_expression: multiplicative_expression . MUL unary_expression
   32                          | multiplicative_expression . DIV unary_expression
   33                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74
    MOD  shift, and go to state 75

    $default  reduce using rule 28 (additive_expression)


state 99

   29 additive_expression: additive_expression SUB multiplicative_expression .
   31 multiplicative_expression: multiplicative_expression . MUL unary_expression
   32                          | multiplicative_expression . DIV unary_expression
   33                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74
    MOD  shift, and go to state 75

    $default  reduce using rule 29 (additive_expression)


state 100

   31 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 31 (multiplicative_expression)


state 101

   32 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 32 (multiplicative_expression)


state 102

   33 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 33 (multiplicative_expression)


state 103

   36 primary_expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 36 (primary_expression)


state 104

   10 argument_list: argument_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    expression                 go to state 112
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 105

    7 parameter_list: IDENTIFIER .

    $default  reduce using rule 7 (parameter_list)


state 106

    6 function_definition: FUNCTION IDENTIFIER LP RP . block

    LC  shift, and go to state 14

    block  go to state 113


state 107

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list . RP block
    8 parameter_list: parameter_list . COMMA IDENTIFIER

    RP     shift, and go to state 114
    COMMA  shift, and go to state 115


state 108

   59 if_statement: IF LP expression RP . statement
   60             | IF LP expression RP . statement ELSE statement
   61             | IF LP expression RP . statement elsif_list
   62             | IF LP expression RP . statement elsif_list ELSE statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19

    expression                 go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    statement                  go to state 116
    global_statement           go to state 33
    if_statement               go to state 34
    while_statement            go to state 35
    for_statement              go to state 36
    return_statement           go to state 37
    break_statement            go to state 38
    continue_statement         go to state 39
    block_statement            go to state 40
    block                      go to state 41


state 109

   66 while_statement: WHILE LP expression RP . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19

    expression                 go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    statement                  go to state 117
    global_statement           go to state 33
    if_statement               go to state 34
    while_statement            go to state 35
    for_statement              go to state 36
    return_statement           go to state 37
    break_statement            go to state 38
    continue_statement         go to state 39
    block_statement            go to state 40
    block                      go to state 41


state 110

   67 for_statement: FOR LP expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt RP statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    $default  reduce using rule 68 (expression_opt)

    expression                 go to state 48
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    expression_opt             go to state 118


state 111

   58 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 58 (identifier_list)


state 112

   10 argument_list: argument_list COMMA expression .

    $default  reduce using rule 10 (argument_list)


state 113

    6 function_definition: FUNCTION IDENTIFIER LP RP block .

    $default  reduce using rule 6 (function_definition)


state 114

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 14

    block  go to state 119


state 115

    8 parameter_list: parameter_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 120


state 116

   59 if_statement: IF LP expression RP statement .
   60             | IF LP expression RP statement . ELSE statement
   61             | IF LP expression RP statement . elsif_list
   62             | IF LP expression RP statement . elsif_list ELSE statement

    ELSE   shift, and go to state 121
    ELSIF  shift, and go to state 122

    ELSE      [reduce using rule 59 (if_statement)]
    ELSIF     [reduce using rule 59 (if_statement)]
    $default  reduce using rule 59 (if_statement)

    elsif_list  go to state 123
    elsif       go to state 124


state 117

   66 while_statement: WHILE LP expression RP statement .

    $default  reduce using rule 66 (while_statement)


state 118

   67 for_statement: FOR LP expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt RP statement

    SEMICOLON  shift, and go to state 125


state 119

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 5 (function_definition)


state 120

    8 parameter_list: parameter_list COMMA IDENTIFIER .

    $default  reduce using rule 8 (parameter_list)


state 121

   60 if_statement: IF LP expression RP statement ELSE . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19

    expression                 go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    statement                  go to state 126
    global_statement           go to state 33
    if_statement               go to state 34
    while_statement            go to state 35
    for_statement              go to state 36
    return_statement           go to state 37
    break_statement            go to state 38
    continue_statement         go to state 39
    block_statement            go to state 40
    block                      go to state 41


state 122

   65 elsif: ELSIF . LP expression RP statement

    LP  shift, and go to state 127


state 123

   61 if_statement: IF LP expression RP statement elsif_list .
   62             | IF LP expression RP statement elsif_list . ELSE statement
   64 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 128
    ELSIF  shift, and go to state 122

    ELSE      [reduce using rule 61 (if_statement)]
    ELSIF     [reduce using rule 61 (if_statement)]
    $default  reduce using rule 61 (if_statement)

    elsif  go to state 129


state 124

   63 elsif_list: elsif .

    $default  reduce using rule 63 (elsif_list)


state 125

   67 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt RP statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    $default  reduce using rule 68 (expression_opt)

    expression                 go to state 48
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    expression_opt             go to state 130


state 126

   60 if_statement: IF LP expression RP statement ELSE statement .

    $default  reduce using rule 60 (if_statement)


state 127

   65 elsif: ELSIF LP . expression RP statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18

    expression                 go to state 131
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31


state 128

   62 if_statement: IF LP expression RP statement elsif_list ELSE . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19

    expression                 go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    statement                  go to state 132
    global_statement           go to state 33
    if_statement               go to state 34
    while_statement            go to state 35
    for_statement              go to state 36
    return_statement           go to state 37
    break_statement            go to state 38
    continue_statement         go to state 39
    block_statement            go to state 40
    block                      go to state 41


state 129

   64 elsif_list: elsif_list elsif .

    $default  reduce using rule 64 (elsif_list)


state 130

   67 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . RP statement

    RP  shift, and go to state 133


state 131

   65 elsif: ELSIF LP expression . RP statement

    RP  shift, and go to state 134


state 132

   62 if_statement: IF LP expression RP statement elsif_list ELSE statement .

    $default  reduce using rule 62 (if_statement)


state 133

   67 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19

    expression                 go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    statement                  go to state 135
    global_statement           go to state 33
    if_statement               go to state 34
    while_statement            go to state 35
    for_statement              go to state 36
    return_statement           go to state 37
    break_statement            go to state 38
    continue_statement         go to state 39
    block_statement            go to state 40
    block                      go to state 41


state 134

   65 elsif: ELSIF LP expression RP . statement

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    FOR             shift, and go to state 8
    RETURN_T        shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NULL_T          shift, and go to state 12
    LP              shift, and go to state 13
    LC              shift, and go to state 14
    SEMICOLON       shift, and go to state 15
    SUB             shift, and go to state 16
    TRUE_T          shift, and go to state 17
    FALSE_T         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19

    expression                 go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    equality_expression        go to state 26
    relational_expression      go to state 27
    additive_expression        go to state 28
    multiplicative_expression  go to state 29
    unary_expression           go to state 30
    primary_expression         go to state 31
    statement                  go to state 136
    global_statement           go to state 33
    if_statement               go to state 34
    while_statement            go to state 35
    for_statement              go to state 36
    return_statement           go to state 37
    break_statement            go to state 38
    continue_statement         go to state 39
    block_statement            go to state 40
    block                      go to state 41


state 135

   67 for_statement: FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP statement .

    $default  reduce using rule 67 (for_statement)


state 136

   65 elsif: ELSIF LP expression RP statement .

    $default  reduce using rule 65 (elsif)
