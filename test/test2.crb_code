FUNCTION dump_a99
 PARAMETER arg99
 BLOCK
  FOR_STATEMENT
   INIT
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 0
   CONDITION
    LT_EXPRESSION
     IDENTIFIER_EXPRESSION i
     METHOD_CALL_EXPRESSION size 0
      IDENTIFIER_EXPRESSION arg99
   POST
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 1
   BLOCK_STATEMENT
    BLOCK
     FOR_STATEMENT
      INIT
       ASSIGN_EXPRESSION
        IDENTIFIER_EXPRESSION j
        INT_EXPRESSION 0
      CONDITION
       LT_EXPRESSION
        IDENTIFIER_EXPRESSION j
        METHOD_CALL_EXPRESSION size 0
         INDEX_EXPRESSION
          IDENTIFIER_EXPRESSION arg99
          IDENTIFIER_EXPRESSION i
      POST
       ASSIGN_EXPRESSION
        IDENTIFIER_EXPRESSION j
        ADD_EXPRESSION
         IDENTIFIER_EXPRESSION j
         INT_EXPRESSION 1
      BLOCK_STATEMENT
       BLOCK
        EXPRESSION_STATEMENT
         FUNCTION_CALL_EXPRESSION print 1
          ARGUMENT
           ADD_EXPRESSION
            ADD_EXPRESSION
             STRING_EXPRESSION "["
             INDEX_EXPRESSION
              INDEX_EXPRESSION
               IDENTIFIER_EXPRESSION arg99
               IDENTIFIER_EXPRESSION i
              IDENTIFIER_EXPRESSION j
            STRING_EXPRESSION "] "
       END_BLOCK
     EXPRESSION_STATEMENT
      FUNCTION_CALL_EXPRESSION print 1
       ARGUMENT
        STRING_EXPRESSION "
"
    END_BLOCK
 END_BLOCK
FUNCTION gtestfunc2
 BLOCK
  EXPRESSION_STATEMENT
   ASSIGN_EXPRESSION
    IDENTIFIER_EXPRESSION gtest
    INT_EXPRESSION 30
  EXPRESSION_STATEMENT
   FUNCTION_CALL_EXPRESSION print 1
    ARGUMENT
     ADD_EXPRESSION
      ADD_EXPRESSION
       STRING_EXPRESSION "gtest.."
       IDENTIFIER_EXPRESSION gtest
      STRING_EXPRESSION "
"
 END_BLOCK
FUNCTION gtestfunc
 BLOCK
  GLOBAL_STATEMENT gtest
  EXPRESSION_STATEMENT
   ASSIGN_EXPRESSION
    IDENTIFIER_EXPRESSION gtest
    INT_EXPRESSION 20
 END_BLOCK
FUNCTION func
 PARAMETER a
 BLOCK
  RETURN_STATEMENT HAVE_EXPR
   IDENTIFIER_EXPRESSION a
 END_BLOCK
FUNCTION void_func
 BLOCK
  EXPRESSION_STATEMENT
   ASSIGN_EXPRESSION
    IDENTIFIER_EXPRESSION qq
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION ww
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION ee
      STRING_EXPRESSION "abc"
  EXPRESSION_STATEMENT
   FUNCTION_CALL_EXPRESSION print 1
    ARGUMENT
     ADD_EXPRESSION
      ADD_EXPRESSION
       STRING_EXPRESSION "qq.."
       IDENTIFIER_EXPRESSION qq
      STRING_EXPRESSION "
"
  RETURN_STATEMENT NOT_HAVE_EXPR
 END_BLOCK
FUNCTION string_func
 BLOCK
  EXPRESSION_STATEMENT
   ASSIGN_EXPRESSION
    IDENTIFIER_EXPRESSION zzz
    STRING_EXPRESSION "zzz"
  FOR_STATEMENT
   INIT
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 0
   CONDITION
    LT_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 10
   POST
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 1
   BLOCK_STATEMENT
    BLOCK
     EXPRESSION_STATEMENT
      FUNCTION_CALL_EXPRESSION print 1
       ARGUMENT
        ADD_EXPRESSION
         ADD_EXPRESSION
          STRING_EXPRESSION "i.."
          IDENTIFIER_EXPRESSION i
         STRING_EXPRESSION "
"
     RETURN_STATEMENT HAVE_EXPR
      STRING_EXPRESSION "abc"
    END_BLOCK
 END_BLOCK
FUNCTION real_func
 BLOCK
  EXPRESSION_STATEMENT
   FUNCTION_CALL_EXPRESSION print 1
    ARGUMENT
     STRING_EXPRESSION "real func in
"
  FOR_STATEMENT
   INIT
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 0
   CONDITION
    LT_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 10
   POST
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 1
   BLOCK_STATEMENT
    BLOCK
     EXPRESSION_STATEMENT
      FUNCTION_CALL_EXPRESSION print 1
       ARGUMENT
        ADD_EXPRESSION
         ADD_EXPRESSION
          STRING_EXPRESSION "i.."
          IDENTIFIER_EXPRESSION i
         STRING_EXPRESSION "
"
     RETURN_STATEMENT HAVE_EXPR
      DOUBLE_EXPRESSION 0.100000000000
    END_BLOCK
  EXPRESSION_STATEMENT
   FUNCTION_CALL_EXPRESSION print 1
    ARGUMENT
     STRING_EXPRESSION "real func out
"
 END_BLOCK
FUNCTION int_func
 BLOCK
  EXPRESSION_STATEMENT
   FUNCTION_CALL_EXPRESSION print 1
    ARGUMENT
     STRING_EXPRESSION "int func in
"
  FOR_STATEMENT
   INIT
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 0
   CONDITION
    LT_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 10
   POST
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 1
   BLOCK_STATEMENT
    BLOCK
     EXPRESSION_STATEMENT
      FUNCTION_CALL_EXPRESSION print 1
       ARGUMENT
        ADD_EXPRESSION
         ADD_EXPRESSION
          STRING_EXPRESSION "i.."
          IDENTIFIER_EXPRESSION i
         STRING_EXPRESSION "
"
     RETURN_STATEMENT HAVE_EXPR
      INT_EXPRESSION 1
    END_BLOCK
  EXPRESSION_STATEMENT
   FUNCTION_CALL_EXPRESSION print 1
    ARGUMENT
     STRING_EXPRESSION "int func out
"
 END_BLOCK
FUNCTION hoge
 PARAMETER a
 PARAMETER b
 BLOCK
  EXPRESSION_STATEMENT
   ASSIGN_EXPRESSION
    IDENTIFIER_EXPRESSION c
    ADD_EXPRESSION
     IDENTIFIER_EXPRESSION a
     IDENTIFIER_EXPRESSION b
  EXPRESSION_STATEMENT
   FUNCTION_CALL_EXPRESSION print 1
    ARGUMENT
     ADD_EXPRESSION
      ADD_EXPRESSION
       STRING_EXPRESSION "a+b.."
       ADD_EXPRESSION
        IDENTIFIER_EXPRESSION a
        IDENTIFIER_EXPRESSION b
      STRING_EXPRESSION "
"
  RETURN_STATEMENT HAVE_EXPR
   IDENTIFIER_EXPRESSION c
 END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "hoge	piyo
\n"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "abc
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 + 5.."
     INT_EXPRESSION 8
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 - 5.."
     INT_EXPRESSION -2
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 + -5.."
     INT_EXPRESSION -2
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 * 5.."
     INT_EXPRESSION 15
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 / 5.."
     INT_EXPRESSION 0
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "10 % 3.."
     INT_EXPRESSION 1
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 + 5.0.."
     DOUBLE_EXPRESSION 8.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 - 5.0.."
     DOUBLE_EXPRESSION -2.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 + -5.0.."
     DOUBLE_EXPRESSION -2.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 * 5.0.."
     DOUBLE_EXPRESSION 15.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 / 5.0.."
     DOUBLE_EXPRESSION 0.600000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "10.0 % 3.0.."
     DOUBLE_EXPRESSION 1.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 + 5.0.."
     DOUBLE_EXPRESSION 8.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 - 5.0.."
     DOUBLE_EXPRESSION -2.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 + -5.0.."
     DOUBLE_EXPRESSION -2.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 * 5.0.."
     DOUBLE_EXPRESSION 15.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 / 5.0.."
     DOUBLE_EXPRESSION 0.600000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "10 % 3.0.."
     DOUBLE_EXPRESSION 1.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 + 5.."
     DOUBLE_EXPRESSION 8.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 - 5.."
     DOUBLE_EXPRESSION -2.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 + -5.."
     DOUBLE_EXPRESSION -2.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 * 5.."
     DOUBLE_EXPRESSION 15.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 / 5.."
     DOUBLE_EXPRESSION 0.600000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "10.0 % 3.."
     DOUBLE_EXPRESSION 1.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  INT_EXPRESSION 3
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 + 5.."
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION 5
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 - 5.."
     SUB_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION 5
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 + -5.."
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION -5
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 * 5.."
     MUL_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION 5
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 / 5.."
     DIV_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION 5
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  INT_EXPRESSION 10
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "10 % 3.."
     MOD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION 3
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  DOUBLE_EXPRESSION 3.000000000000
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 + 5.0.."
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION 5.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 - 5.0.."
     SUB_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION 5.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 + -5.0.."
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION -5.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 * 5.0.."
     MUL_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION 5.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 / 5.0.."
     DIV_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION 5.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  INT_EXPRESSION 10
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "10.0 % 3.0.."
     MOD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION 3.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  INT_EXPRESSION 3
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 + 5.0.."
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION 5.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 - 5.0.."
     SUB_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION 5.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 + -5.0.."
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION -5.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 * 5.0.."
     MUL_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION 5.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3 / 5.0.."
     DIV_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION 5.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  INT_EXPRESSION 10
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "10 % 3.0.."
     MOD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      DOUBLE_EXPRESSION 3.000000000000
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  DOUBLE_EXPRESSION 3.000000000000
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 + 5.."
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION 5
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 - 5.."
     SUB_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION 5
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 + -5.."
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION -5
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 * 5.."
     MUL_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION 5
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "3.0 / 5.."
     DIV_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION 5
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  DOUBLE_EXPRESSION 10.000000000000
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "10.0 % 3.."
     MOD_EXPRESSION
      IDENTIFIER_EXPRESSION a
      INT_EXPRESSION 3
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "1 < 3.."
     BOOLEAN_EXPRESSION true
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "1 <= 3.."
     BOOLEAN_EXPRESSION true
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "1 == 3.."
     BOOLEAN_EXPRESSION false
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "1 != 3.."
     BOOLEAN_EXPRESSION true
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "1 >= 3.."
     BOOLEAN_EXPRESSION false
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "1 > 3.."
     BOOLEAN_EXPRESSION false
    STRING_EXPRESSION "
"
IF_STATEMENT NOT_HAVE_NEXT
 BOOLEAN_EXPRESSION true
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "true
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 BOOLEAN_EXPRESSION false
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "false
"
  END_BLOCK
IF_STATEMENT HAVE_NEXT
 BOOLEAN_EXPRESSION false
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "bad
"
  END_BLOCK
 ELSE
  BLOCK_STATEMENT
   BLOCK
    EXPRESSION_STATEMENT
     FUNCTION_CALL_EXPRESSION print 1
      ARGUMENT
       STRING_EXPRESSION "good
"
   END_BLOCK
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION i
  INT_EXPRESSION 0
FOR_STATEMENT
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       STRING_EXPRESSION " i.."
       IDENTIFIER_EXPRESSION i
   IF_STATEMENT NOT_HAVE_NEXT
    GT_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 5
    BLOCK_STATEMENT
     BLOCK
      BREAK_STATEMENT
     END_BLOCK
   EXPRESSION_STATEMENT
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 1
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 5
 POST
  POST_INCREMENT_EXPRESSION
   IDENTIFIER_EXPRESSION i
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       ADD_EXPRESSION
        STRING_EXPRESSION "*** i.."
        IDENTIFIER_EXPRESSION i
       STRING_EXPRESSION "***
"
   IF_STATEMENT HAVE_NEXT
    EQ_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 0
    BLOCK_STATEMENT
     BLOCK
      EXPRESSION_STATEMENT
       FUNCTION_CALL_EXPRESSION print 1
        ARGUMENT
         STRING_EXPRESSION "i == 0
"
     END_BLOCK
    ELSIF HAVE_NEXT
     EQ_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 1
     BLOCK_STATEMENT
      BLOCK
       EXPRESSION_STATEMENT
        FUNCTION_CALL_EXPRESSION print 1
         ARGUMENT
          STRING_EXPRESSION "i == 1
"
      END_BLOCK
    ELSIF HAVE_NEXT
     EQ_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 2
     BLOCK_STATEMENT
      BLOCK
       EXPRESSION_STATEMENT
        FUNCTION_CALL_EXPRESSION print 1
         ARGUMENT
          STRING_EXPRESSION "i == 2
"
      END_BLOCK
    ELSE
     BLOCK_STATEMENT
      BLOCK
       EXPRESSION_STATEMENT
        FUNCTION_CALL_EXPRESSION print 1
         ARGUMENT
          STRING_EXPRESSION "i == else
"
      END_BLOCK
   IF_STATEMENT NOT_HAVE_NEXT
    NE_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 3
    BLOCK_STATEMENT
     BLOCK
      EXPRESSION_STATEMENT
       FUNCTION_CALL_EXPRESSION print 1
        ARGUMENT
         STRING_EXPRESSION "i != 3
"
     END_BLOCK
   IF_STATEMENT NOT_HAVE_NEXT
    LOGICAL_OR_EXPRESSION
     EQ_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 2
     EQ_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 3
    BLOCK_STATEMENT
     BLOCK
      EXPRESSION_STATEMENT
       FUNCTION_CALL_EXPRESSION print 1
        ARGUMENT
         STRING_EXPRESSION "i == 2 || i == 3
"
     END_BLOCK
   FOR_STATEMENT
    INIT
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION j
      INT_EXPRESSION 0
    CONDITION
     LT_EXPRESSION
      IDENTIFIER_EXPRESSION j
      INT_EXPRESSION 5
    POST
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION j
      ADD_EXPRESSION
       IDENTIFIER_EXPRESSION j
       INT_EXPRESSION 1
    BLOCK_STATEMENT
     BLOCK
      IF_STATEMENT NOT_HAVE_NEXT
       LOGICAL_AND_EXPRESSION
        EQ_EXPRESSION
         IDENTIFIER_EXPRESSION i
         INT_EXPRESSION 2
        EQ_EXPRESSION
         IDENTIFIER_EXPRESSION j
         INT_EXPRESSION 3
       BLOCK_STATEMENT
        BLOCK
         EXPRESSION_STATEMENT
          FUNCTION_CALL_EXPRESSION print 1
           ARGUMENT
            ADD_EXPRESSION
             ADD_EXPRESSION
              STRING_EXPRESSION "i == 2 && j == "
              IDENTIFIER_EXPRESSION j
             STRING_EXPRESSION "
"
        END_BLOCK
     END_BLOCK
  END_BLOCK
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LE_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 5
 POST
  POST_INCREMENT_EXPRESSION
   IDENTIFIER_EXPRESSION i
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       STRING_EXPRESSION " i.."
       IDENTIFIER_EXPRESSION i
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 5
 CONDITION
  GE_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 POST
  POST_DECREMENT_EXPRESSION
   IDENTIFIER_EXPRESSION i
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       STRING_EXPRESSION " i.."
       IDENTIFIER_EXPRESSION i
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION i
  INT_EXPRESSION 5
WHILE_STATEMENT
 GT_EXPRESSION
  IDENTIFIER_EXPRESSION i
  INT_EXPRESSION 0
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       STRING_EXPRESSION " i.."
       IDENTIFIER_EXPRESSION i
   EXPRESSION_STATEMENT
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     SUB_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 1
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
WHILE_STATEMENT
 LT_EXPRESSION
  IDENTIFIER_EXPRESSION i
  INT_EXPRESSION 10
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       STRING_EXPRESSION " i.."
       IDENTIFIER_EXPRESSION i
   IF_STATEMENT NOT_HAVE_NEXT
    EQ_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 5
    BLOCK_STATEMENT
     BLOCK
      BREAK_STATEMENT
     END_BLOCK
   EXPRESSION_STATEMENT
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 1
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION i
  INT_EXPRESSION 0
WHILE_STATEMENT
 LT_EXPRESSION
  IDENTIFIER_EXPRESSION i
  INT_EXPRESSION 10
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 1
   IF_STATEMENT NOT_HAVE_NEXT
    LT_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 5
    BLOCK_STATEMENT
     BLOCK
      CONTINUE_STATEMENT
     END_BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       STRING_EXPRESSION " i.."
       IDENTIFIER_EXPRESSION i
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 10
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       STRING_EXPRESSION " i.."
       IDENTIFIER_EXPRESSION i
   IF_STATEMENT NOT_HAVE_NEXT
    EQ_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 5
    BLOCK_STATEMENT
     BLOCK
      BREAK_STATEMENT
     END_BLOCK
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 10
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   IF_STATEMENT NOT_HAVE_NEXT
    LT_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 5
    BLOCK_STATEMENT
     BLOCK
      CONTINUE_STATEMENT
     END_BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       STRING_EXPRESSION " i.."
       IDENTIFIER_EXPRESSION i
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  BOOLEAN_EXPRESSION true
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "a.."
     IDENTIFIER_EXPRESSION a
    STRING_EXPRESSION "
"
IF_STATEMENT HAVE_NEXT
 IDENTIFIER_EXPRESSION a
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "true
"
  END_BLOCK
 ELSE
  BLOCK_STATEMENT
   BLOCK
    EXPRESSION_STATEMENT
     FUNCTION_CALL_EXPRESSION print 1
      ARGUMENT
       STRING_EXPRESSION "false
"
   END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 LOGICAL_OR_EXPRESSION
  IDENTIFIER_EXPRESSION a
  BOOLEAN_EXPRESSION false
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "a || false
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 LOGICAL_AND_EXPRESSION
  IDENTIFIER_EXPRESSION a
  BOOLEAN_EXPRESSION false
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "a && false
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 EQ_EXPRESSION
  BOOLEAN_EXPRESSION true
  BOOLEAN_EXPRESSION true
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "true == true good
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 EQ_EXPRESSION
  BOOLEAN_EXPRESSION true
  BOOLEAN_EXPRESSION false
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "true == false bad
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 NE_EXPRESSION
  BOOLEAN_EXPRESSION true
  BOOLEAN_EXPRESSION true
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "true != true bad
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 NE_EXPRESSION
  BOOLEAN_EXPRESSION true
  BOOLEAN_EXPRESSION false
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "true != false good
"
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   INT_EXPRESSION 3
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION z
  FUNCTION_CALL_EXPRESSION print 1
   ARGUMENT
    DOUBLE_EXPRESSION 3.000000000000
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "z.."
     IDENTIFIER_EXPRESSION z
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  INT_EXPRESSION 5
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "a.."
     IDENTIFIER_EXPRESSION a
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  DOUBLE_EXPRESSION 5.000000000000
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "a.."
     IDENTIFIER_EXPRESSION a
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  STRING_EXPRESSION "piyopiyo"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "a.."
     IDENTIFIER_EXPRESSION a
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION "abc"
IF_STATEMENT NOT_HAVE_NEXT
 EQ_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION "abc"
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "== good.
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 NE_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION "abc"
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "!= bad.
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 LT_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION "abd"
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "< good.
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 LT_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION "abb"
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "< bad.
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 LE_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION "abc"
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "<= good.
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 LE_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION "abd"
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "<= good.
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 LE_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION "abb"
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION "<= bad.
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 GE_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION ">= abc"
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION ">= good.
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 GE_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION ">= abb"
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION ">= good.
"
  END_BLOCK
IF_STATEMENT NOT_HAVE_NEXT
 GE_EXPRESSION
  IDENTIFIER_EXPRESSION str
  STRING_EXPRESSION "abd"
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      STRING_EXPRESSION ">= bad.
"
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION hoge 2
  ARGUMENT
   INT_EXPRESSION 1
  ARGUMENT
   INT_EXPRESSION 3
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION b
  FUNCTION_CALL_EXPRESSION hoge 2
   ARGUMENT
    INT_EXPRESSION 2
   ARGUMENT
    INT_EXPRESSION 5
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "b.."
     IDENTIFIER_EXPRESSION b
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "int_func().."
     FUNCTION_CALL_EXPRESSION int_func 0
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "real_func().."
     FUNCTION_CALL_EXPRESSION real_func 0
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "string_func().."
     FUNCTION_CALL_EXPRESSION string_func 0
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "void_func().."
     FUNCTION_CALL_EXPRESSION void_func 0
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 STRING_EXPRESSION "zzz"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  FUNCTION_CALL_EXPRESSION func 1
   ARGUMENT
    STRING_EXPRESSION "abc"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "a.."
     IDENTIFIER_EXPRESSION a
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION gtest
  INT_EXPRESSION 10
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION gtestfunc 0
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION gtestfunc2 0
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "gtest.."
     IDENTIFIER_EXPRESSION gtest
    STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  ARRAY_EXPRESSION 8
   INT_EXPRESSION 1
   INT_EXPRESSION 2
   INT_EXPRESSION 3
   INT_EXPRESSION 4
   INT_EXPRESSION 5
   INT_EXPRESSION 6
   INT_EXPRESSION 7
   INT_EXPRESSION 8
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   METHOD_CALL_EXPRESSION size 0
    IDENTIFIER_EXPRESSION a
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       ADD_EXPRESSION
        STRING_EXPRESSION "("
        INDEX_EXPRESSION
         IDENTIFIER_EXPRESSION a
         IDENTIFIER_EXPRESSION i
       STRING_EXPRESSION ")"
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   IDENTIFIER_EXPRESSION a
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "len.."
     METHOD_CALL_EXPRESSION length 0
      STRING_EXPRESSION "abc"
    STRING_EXPRESSION "
"
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 10
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       ADD_EXPRESSION
        STRING_EXPRESSION "a.size().."
        METHOD_CALL_EXPRESSION size 0
         IDENTIFIER_EXPRESSION a
       STRING_EXPRESSION "
"
   EXPRESSION_STATEMENT
    METHOD_CALL_EXPRESSION add 1
     IDENTIFIER_EXPRESSION a
     ARGUMENT
      IDENTIFIER_EXPRESSION i
  END_BLOCK
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   METHOD_CALL_EXPRESSION size 0
    IDENTIFIER_EXPRESSION a
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       ADD_EXPRESSION
        STRING_EXPRESSION "("
        INDEX_EXPRESSION
         IDENTIFIER_EXPRESSION a
         IDENTIFIER_EXPRESSION i
       STRING_EXPRESSION ")"
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a99
  FUNCTION_CALL_EXPRESSION new_array 1
   ARGUMENT
    INT_EXPRESSION 9
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 9
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    ASSIGN_EXPRESSION
     INDEX_EXPRESSION
      IDENTIFIER_EXPRESSION a99
      IDENTIFIER_EXPRESSION i
     FUNCTION_CALL_EXPRESSION new_array 1
      ARGUMENT
       INT_EXPRESSION 9
   FOR_STATEMENT
    INIT
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION j
      INT_EXPRESSION 0
    CONDITION
     LT_EXPRESSION
      IDENTIFIER_EXPRESSION j
      INT_EXPRESSION 9
    POST
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION j
      ADD_EXPRESSION
       IDENTIFIER_EXPRESSION j
       INT_EXPRESSION 1
    BLOCK_STATEMENT
     BLOCK
      EXPRESSION_STATEMENT
       ASSIGN_EXPRESSION
        INDEX_EXPRESSION
         INDEX_EXPRESSION
          IDENTIFIER_EXPRESSION a99
          IDENTIFIER_EXPRESSION i
         IDENTIFIER_EXPRESSION j
        MUL_EXPRESSION
         ADD_EXPRESSION
          IDENTIFIER_EXPRESSION i
          INT_EXPRESSION 1
         ADD_EXPRESSION
          IDENTIFIER_EXPRESSION j
          INT_EXPRESSION 1
     END_BLOCK
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION dump_a99 1
  ARGUMENT
   IDENTIFIER_EXPRESSION a99
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a99
  FUNCTION_CALL_EXPRESSION new_array 2
   ARGUMENT
    INT_EXPRESSION 9
   ARGUMENT
    INT_EXPRESSION 9
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 9
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   FOR_STATEMENT
    INIT
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION j
      INT_EXPRESSION 0
    CONDITION
     LT_EXPRESSION
      IDENTIFIER_EXPRESSION j
      INT_EXPRESSION 9
    POST
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION j
      ADD_EXPRESSION
       IDENTIFIER_EXPRESSION j
       INT_EXPRESSION 1
    BLOCK_STATEMENT
     BLOCK
      EXPRESSION_STATEMENT
       ASSIGN_EXPRESSION
        INDEX_EXPRESSION
         INDEX_EXPRESSION
          IDENTIFIER_EXPRESSION a99
          IDENTIFIER_EXPRESSION i
         IDENTIFIER_EXPRESSION j
        MUL_EXPRESSION
         ADD_EXPRESSION
          IDENTIFIER_EXPRESSION i
          INT_EXPRESSION 1
         ADD_EXPRESSION
          IDENTIFIER_EXPRESSION j
          INT_EXPRESSION 1
     END_BLOCK
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION dump_a99 1
  ARGUMENT
   IDENTIFIER_EXPRESSION a99
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   IDENTIFIER_EXPRESSION a99
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a2
  ARRAY_EXPRESSION 0
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a3
  ARRAY_EXPRESSION 5
   INT_EXPRESSION 1
   INT_EXPRESSION 2
   INT_EXPRESSION 3
   INT_EXPRESSION 4
   INT_EXPRESSION 5
EXPRESSION_STATEMENT
 METHOD_CALL_EXPRESSION resize 1
  IDENTIFIER_EXPRESSION a3
  ARGUMENT
   INT_EXPRESSION 20
EXPRESSION_STATEMENT
 METHOD_CALL_EXPRESSION resize 1
  IDENTIFIER_EXPRESSION a3
  ARGUMENT
   INT_EXPRESSION 10
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  ARRAY_EXPRESSION 5
   INT_EXPRESSION 1
   INT_EXPRESSION 2
   INT_EXPRESSION 3
   STRING_EXPRESSION "a"
   ARRAY_EXPRESSION 3
    INT_EXPRESSION 1
    INT_EXPRESSION 2
    ARRAY_EXPRESSION 2
     STRING_EXPRESSION "3"
     DOUBLE_EXPRESSION 1.500000000000
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   IDENTIFIER_EXPRESSION a
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    STRING_EXPRESSION "a.."
    IDENTIFIER_EXPRESSION a
