EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION a
  INT_EXPRESSION 20
IF_STATEMENT HAVE_NEXT
 EQ_EXPRESSION
  MOD_EXPRESSION
   IDENTIFIER_EXPRESSION a
   INT_EXPRESSION 3
  INT_EXPRESSION 0
 EXPRESSION_STATEMENT
  FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
  STRING_EXPRESSION "a%3==0
"
 ELSE
  IF_STATEMENT HAVE_NEXT
   EQ_EXPRESSION
    MOD_EXPRESSION
     IDENTIFIER_EXPRESSION a
     INT_EXPRESSION 4
    INT_EXPRESSION 0
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
    ARGUMENT
    STRING_EXPRESSION "a%4==0
"
   ELSE
    IF_STATEMENT HAVE_NEXT
     EQ_EXPRESSION
      MOD_EXPRESSION
       IDENTIFIER_EXPRESSION a
       INT_EXPRESSION 5
      INT_EXPRESSION 0
     EXPRESSION_STATEMENT
      FUNCTION_CALL_EXPRESSION print 1
      ARGUMENT
      STRING_EXPRESSION "a%5==0
"
     ELSE
      EXPRESSION_STATEMENT
       FUNCTION_CALL_EXPRESSION print 1
       ARGUMENT
       ADD_EXPRESSION
        ADD_EXPRESSION
         STRING_EXPRESSION "a=="
         IDENTIFIER_EXPRESSION a
        STRING_EXPRESSION "
"
IF_STATEMENT HAVE_NEXT
 EQ_EXPRESSION
  MOD_EXPRESSION
   IDENTIFIER_EXPRESSION a
   INT_EXPRESSION 3
  INT_EXPRESSION 0
 EXPRESSION_STATEMENT
  FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
  STRING_EXPRESSION "a%3==0
"
 ELSIF HAVE_NEXT
  EQ_EXPRESSION
   MOD_EXPRESSION
    IDENTIFIER_EXPRESSION a
    INT_EXPRESSION 4
   INT_EXPRESSION 0
  EXPRESSION_STATEMENT
   FUNCTION_CALL_EXPRESSION print 1
   ARGUMENT
   STRING_EXPRESSION "a%4==0
"
 ELSIF HAVE_NEXT
  EQ_EXPRESSION
   MOD_EXPRESSION
    IDENTIFIER_EXPRESSION a
    INT_EXPRESSION 5
   INT_EXPRESSION 0
  EXPRESSION_STATEMENT
   FUNCTION_CALL_EXPRESSION print 1
   ARGUMENT
   STRING_EXPRESSION "a%5==0
"
 ELSE
  EXPRESSION_STATEMENT
   FUNCTION_CALL_EXPRESSION print 1
   ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "a=="
     IDENTIFIER_EXPRESSION a
    STRING_EXPRESSION "
"
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 5
 POST
  ASSIGN_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 EXPRESSION_STATEMENT
  FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
  ADD_EXPRESSION
   ADD_EXPRESSION
    STRING_EXPRESSION "i="
    IDENTIFIER_EXPRESSION i
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION i
  INT_EXPRESSION 0
WHILE_STATEMENT
 LT_EXPRESSION
  IDENTIFIER_EXPRESSION i
  INT_EXPRESSION 5
 EXPRESSION_STATEMENT
  ASSIGN_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
 ARGUMENT
 ADD_EXPRESSION
  ADD_EXPRESSION
   STRING_EXPRESSION "i="
   IDENTIFIER_EXPRESSION i
  STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 NULL_EXPRESSION
