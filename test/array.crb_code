FUNCTION dump_a99
 PARAMETER arg99
 BLOCK
  FOR_STATEMENT
   INIT
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     INT_EXPRESSION 0
   CONDITION
    LT_EXPRESSION
     IDENTIFIER_EXPRESSION i
     METHOD_CALL_EXPRESSION size 0
      IDENTIFIER_EXPRESSION arg99
   POST
    ASSIGN_EXPRESSION
     IDENTIFIER_EXPRESSION i
     ADD_EXPRESSION
      IDENTIFIER_EXPRESSION i
      INT_EXPRESSION 1
   BLOCK_STATEMENT
    BLOCK
     FOR_STATEMENT
      INIT
       ASSIGN_EXPRESSION
        IDENTIFIER_EXPRESSION j
        INT_EXPRESSION 0
      CONDITION
       LT_EXPRESSION
        IDENTIFIER_EXPRESSION j
        METHOD_CALL_EXPRESSION size 0
         INDEX_EXPRESSION
          IDENTIFIER_EXPRESSION arg99
          IDENTIFIER_EXPRESSION i
      POST
       ASSIGN_EXPRESSION
        IDENTIFIER_EXPRESSION j
        ADD_EXPRESSION
         IDENTIFIER_EXPRESSION j
         INT_EXPRESSION 1
      BLOCK_STATEMENT
       BLOCK
        EXPRESSION_STATEMENT
         FUNCTION_CALL_EXPRESSION print 1
          ARGUMENT
           ADD_EXPRESSION
            ADD_EXPRESSION
             STRING_EXPRESSION "["
             INDEX_EXPRESSION
              INDEX_EXPRESSION
               IDENTIFIER_EXPRESSION arg99
               IDENTIFIER_EXPRESSION i
              IDENTIFIER_EXPRESSION j
            STRING_EXPRESSION "] "
       END_BLOCK
     EXPRESSION_STATEMENT
      FUNCTION_CALL_EXPRESSION print 1
       ARGUMENT
        STRING_EXPRESSION "
"
    END_BLOCK
 END_BLOCK
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a
  ARRAY_EXPRESSION 8
   INT_EXPRESSION 1
   INT_EXPRESSION 2
   INT_EXPRESSION 3
   INT_EXPRESSION 4
   INT_EXPRESSION 5
   INT_EXPRESSION 6
   INT_EXPRESSION 7
   INT_EXPRESSION 8
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   METHOD_CALL_EXPRESSION size 0
    IDENTIFIER_EXPRESSION a
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       ADD_EXPRESSION
        STRING_EXPRESSION "("
        INDEX_EXPRESSION
         IDENTIFIER_EXPRESSION a
         IDENTIFIER_EXPRESSION i
       STRING_EXPRESSION ")"
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   IDENTIFIER_EXPRESSION a
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   ADD_EXPRESSION
    ADD_EXPRESSION
     STRING_EXPRESSION "len.."
     METHOD_CALL_EXPRESSION length 0
      STRING_EXPRESSION "abc"
    STRING_EXPRESSION "
"
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 10
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       ADD_EXPRESSION
        STRING_EXPRESSION "a.size().."
        METHOD_CALL_EXPRESSION size 0
         IDENTIFIER_EXPRESSION a
       STRING_EXPRESSION "
"
   EXPRESSION_STATEMENT
    METHOD_CALL_EXPRESSION add 1
     IDENTIFIER_EXPRESSION a
     ARGUMENT
      IDENTIFIER_EXPRESSION i
  END_BLOCK
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   METHOD_CALL_EXPRESSION size 0
    IDENTIFIER_EXPRESSION a
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    FUNCTION_CALL_EXPRESSION print 1
     ARGUMENT
      ADD_EXPRESSION
       ADD_EXPRESSION
        STRING_EXPRESSION "("
        INDEX_EXPRESSION
         IDENTIFIER_EXPRESSION a
         IDENTIFIER_EXPRESSION i
       STRING_EXPRESSION ")"
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a99
  FUNCTION_CALL_EXPRESSION new_array 1
   ARGUMENT
    INT_EXPRESSION 9
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 9
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    ASSIGN_EXPRESSION
     INDEX_EXPRESSION
      IDENTIFIER_EXPRESSION a99
      IDENTIFIER_EXPRESSION i
     FUNCTION_CALL_EXPRESSION new_array 1
      ARGUMENT
       INT_EXPRESSION 9
   FOR_STATEMENT
    INIT
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION j
      INT_EXPRESSION 0
    CONDITION
     LT_EXPRESSION
      IDENTIFIER_EXPRESSION j
      INT_EXPRESSION 9
    POST
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION j
      ADD_EXPRESSION
       IDENTIFIER_EXPRESSION j
       INT_EXPRESSION 1
    BLOCK_STATEMENT
     BLOCK
      EXPRESSION_STATEMENT
       ASSIGN_EXPRESSION
        INDEX_EXPRESSION
         INDEX_EXPRESSION
          IDENTIFIER_EXPRESSION a99
          IDENTIFIER_EXPRESSION i
         IDENTIFIER_EXPRESSION j
        MUL_EXPRESSION
         ADD_EXPRESSION
          IDENTIFIER_EXPRESSION i
          INT_EXPRESSION 1
         ADD_EXPRESSION
          IDENTIFIER_EXPRESSION j
          INT_EXPRESSION 1
     END_BLOCK
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION dump_a99 1
  ARGUMENT
   IDENTIFIER_EXPRESSION a99
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a99
  FUNCTION_CALL_EXPRESSION new_array 2
   ARGUMENT
    INT_EXPRESSION 9
   ARGUMENT
    INT_EXPRESSION 9
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 9
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   FOR_STATEMENT
    INIT
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION j
      INT_EXPRESSION 0
    CONDITION
     LT_EXPRESSION
      IDENTIFIER_EXPRESSION j
      INT_EXPRESSION 9
    POST
     ASSIGN_EXPRESSION
      IDENTIFIER_EXPRESSION j
      ADD_EXPRESSION
       IDENTIFIER_EXPRESSION j
       INT_EXPRESSION 1
    BLOCK_STATEMENT
     BLOCK
      EXPRESSION_STATEMENT
       ASSIGN_EXPRESSION
        INDEX_EXPRESSION
         INDEX_EXPRESSION
          IDENTIFIER_EXPRESSION a99
          IDENTIFIER_EXPRESSION i
         IDENTIFIER_EXPRESSION j
        MUL_EXPRESSION
         ADD_EXPRESSION
          IDENTIFIER_EXPRESSION i
          INT_EXPRESSION 1
         ADD_EXPRESSION
          IDENTIFIER_EXPRESSION j
          INT_EXPRESSION 1
     END_BLOCK
  END_BLOCK
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION dump_a99 1
  ARGUMENT
   IDENTIFIER_EXPRESSION a99
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   IDENTIFIER_EXPRESSION a99
EXPRESSION_STATEMENT
 FUNCTION_CALL_EXPRESSION print 1
  ARGUMENT
   STRING_EXPRESSION "
"
EXPRESSION_STATEMENT
 ASSIGN_EXPRESSION
  IDENTIFIER_EXPRESSION a2
  ARRAY_EXPRESSION 0
FOR_STATEMENT
 INIT
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 0
 CONDITION
  LT_EXPRESSION
   IDENTIFIER_EXPRESSION i
   INT_EXPRESSION 10000
 POST
  ASSIGN_EXPRESSION
   IDENTIFIER_EXPRESSION i
   ADD_EXPRESSION
    IDENTIFIER_EXPRESSION i
    INT_EXPRESSION 1
 BLOCK_STATEMENT
  BLOCK
   EXPRESSION_STATEMENT
    METHOD_CALL_EXPRESSION add 1
     IDENTIFIER_EXPRESSION a2
     ARGUMENT
      FUNCTION_CALL_EXPRESSION new_array 1
       ARGUMENT
        MOD_EXPRESSION
         IDENTIFIER_EXPRESSION i
         INT_EXPRESSION 5
   EXPRESSION_STATEMENT
    METHOD_CALL_EXPRESSION add 1
     IDENTIFIER_EXPRESSION a2
     ARGUMENT
      IDENTIFIER_EXPRESSION a2
  END_BLOCK
